#include <stdio.h>
#include <stdlib.h>
#include "crypto.h"


int xorEncryption(char* key, const char* input, char* output, char mode) {

  int key_length = getLength(key);
  if(key_length < 1) {
    return 1; //Key too short
  }

  int input_length = getLength(input);

  for(int i = 0; i < input_length; i++) {
    int key_val = (key[i % key_length] - '@');
    if(key_val < 1 || key_val > 26) return 2; 

    int input_val = (input[i] - '@');

  
    switch (mode) {
      case 'E':
      if(input_val < 1 || input_val > 26) { 
        return 3;
      };
      break;
      case 'D':
      if(input_val < 0 || input_val > 32) { 
        return 3;
      };
      break;
      default:
      return 6;
    }

    int xor_val = (input_val ^ key_val);
    if(xor_val < 0 || xor_val > 32) return 4; 

    output[i] = (xor_val + '@');
  }

  return 0;
}


int getLength(const char *msg) {
  int length = 0;
  int containsReturn = 0;
  while(msg[length] != '\0') {
    if(msg[length] == '\n') containsReturn = 1;
    length++;
  }
  if(containsReturn) length--;
  return length;
}
